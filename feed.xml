<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-10-26T14:56:05+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">easySensors blog</title><subtitle>This website will display our products valuable tips and the code </subtitle><author><name>easySensors team</name></author><entry><title type="html">EasySwitchBox Antenna Efficiency Tuning</title><link href="http://localhost:4000/SWR.html" rel="alternate" type="text/html" title="EasySwitchBox Antenna Efficiency Tuning" /><published>2022-10-26T00:00:00+03:00</published><updated>2022-10-26T00:00:00+03:00</updated><id>http://localhost:4000/SWR</id><content type="html" xml:base="http://localhost:4000/SWR.html"><![CDATA[<p>The number one challenge for compact radio-controlled device creation is PCB antenna efficiency tuning. We could use antennas with SMA connector feeder for an easy workaround, but they are bulky and hard to put inside an enclosure. Most DIY projects use wire antennas. There are lots of pros with this solution, but also many cons. Someone prefer often it is because it costs nothing, and it works in most cases! However, the cons are that it does not work as well and sometimes does not work at all. Spending hours trying to put the antenna into the device compartment is a real pain. Then, when you finally get everything properly packed inside, the device transmits nothing. Agrhh, all the signals went into the nearby ground plane or the wire starts resonating at a completely different frequency.
Coiled antennas are like PCB antennas, requiring the counterpoise ground plane. They require efficiency tuning similar to PCB antennas. PCB antennas are more compact and easy to produce.
<img src="assets/img/EasySwitchBox-antenna-tuning-1.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>PCB antenna efficiency tuning turns out to be a difficult equation for many creators. Easier to design the device and antenna as one piece from the very beginning. Let’s say you have the battery-powered device, enclosure, and antenna dimensions determined. The connected thing is being built around the antenna’s necessary counterpoise ground plane and gap between them. The counterpoise ground plane of the device is an essential part of the antenna.
<img src="assets/img/EasySwitchBox-antenna-tuning-2.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>Then tuning starts:</p>

<p>We should increase antenna radiation efficiency and match transmitter with antenna to increase reflection efficiency. Antenna radiation efficiency is maximum when antenna resonance frequency is equal to the transmission of radio frequency. We can find the resonance frequency as the minimum of the antenna impedance. We used prototype antenna modules with longer antennas, so we could cut it to decrease resonance frequency.</p>

<p><img src="assets/img/EasySwitchBox-antenna-tuning-3.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>The graph below depicts the impedance vs frequency curve of our antenna module before resonance tuning (red line) and after cutting the antenna to the appropriate length (blue line).</p>

<p><img src="assets/img/EasySwitchBox-antenna-tuning-4.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>The second step is to estimate reflection efficiency. It is SWR measurement. If the transmitter matched with antenna SWR = 1 then  100% of radio power will be transmitted to the antenna. If SWR = 2 then 89% of power is transmitted, SWR = 3 is equal to 75% of transmitted power and so on. The rule of thumb is achieving SWR less than 2.</p>

<p><img src="assets/img/EasySwitchBox-antenna-tuning-5.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>The chart below is a comparison of SWR for the easySwitchBox with different antennas.</p>

<p><img src="assets/img/EasySwitchBox-antenna-tuning-6.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>Green line is a simple 9cm wire. Interesting thing SWR is perfect, but the frequency is not 868Mhz because the ground plane and wire position are far from the ideal monopole.
Matched PCB antenna:</p>

<p><img src="assets/img/EasySwitchBox-antenna-tuning-SWR-7.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>Unmatched PCB antenna:</p>

<p><img src="assets/img/EasySwitchBox-antenna-tuning-SWR-8.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>Wire antenna:</p>

<p><img src="assets/img/EasySwitchBox-antenna-tuning-SWR-9.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>Stock SMA antenna:</p>

<p><img src="assets/img/EasySwitchBox-antenna-tuning-SWR-10.jpg" alt="EasySwitchBox Antenna Efficiency Tuning" /></p>

<p>Measured followed distance for low power RFM69CW module:</p>

<p>•	Unmatched antennas range is 200 meters (656 ft.)</p>

<p>•	Wire antenna range is 220 meters (720 ft.)</p>

<p>•	Matched antennas range is 350 meters (1150 ft.)</p>

<p>•	SMA antenna range is 300 meters (985 ft.)</p>]]></content><author><name>easySensors team</name></author><category term="home" /><summary type="html"><![CDATA[The number one challenge for compact radio-controlled device creation is PCB antenna efficiency tuning. We could use antennas with SMA connector feeder for an easy workaround, but they are bulky and hard to put inside an enclosure. Most DIY projects use wire antennas. There are lots of pros with this solution, but also many cons. Someone prefer often it is because it costs nothing, and it works in most cases! However, the cons are that it does not work as well and sometimes does not work at all. Spending hours trying to put the antenna into the device compartment is a real pain. Then, when you finally get everything properly packed inside, the device transmits nothing. Agrhh, all the signals went into the nearby ground plane or the wire starts resonating at a completely different frequency. Coiled antennas are like PCB antennas, requiring the counterpoise ground plane. They require efficiency tuning similar to PCB antennas. PCB antennas are more compact and easy to produce.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/EasySwitchBox-antenna-tuning-SWR-7.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/EasySwitchBox-antenna-tuning-SWR-7.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">High speed external lines like SPI and Dupont wires = not good match</title><link href="http://localhost:4000/Dupont.html" rel="alternate" type="text/html" title="High speed external lines like SPI and Dupont wires = not good match" /><published>2022-09-30T00:00:00+03:00</published><updated>2022-09-30T00:00:00+03:00</updated><id>http://localhost:4000/Dupont</id><content type="html" xml:base="http://localhost:4000/Dupont.html"><![CDATA[<p>This is “standard” connection of NFR board using long Dupont wires. When external modules connected with high speed digital interfaces (SPI for example) using ordinary  Dupont wires, signal gets degraded. Use long wires only for prototyping. Try to use wires as short as you can or do not use wires at all.</p>

<p><img src="assets/img/Long-Wires.png" alt="High speed external lines like SPI and Dupont wires" /></p>]]></content><author><name>easySensors team</name></author><category term="home" /><summary type="html"><![CDATA[This is “standard” connection of NFR board using long Dupont wires. When external modules connected with high speed digital interfaces (SPI for example) using ordinary Dupont wires, signal gets degraded. Use long wires only for prototyping. Try to use wires as short as you can or do not use wires at all.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/UNo-NRF.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/UNo-NRF.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">LoRa radio and samarthome controller = best match</title><link href="http://localhost:4000/lora-nanoshield.html" rel="alternate" type="text/html" title="LoRa radio and samarthome controller = best match" /><published>2022-09-29T00:00:00+03:00</published><updated>2022-09-29T00:00:00+03:00</updated><id>http://localhost:4000/lora-nanoshield</id><content type="html" xml:base="http://localhost:4000/lora-nanoshield.html"><![CDATA[<p>LoRa MySensors API gateway connected to HomeAssistant raspberry PI4. Best match for long distance sensors and actuators</p>]]></content><author><name>easySensors team</name></author><category term="home" /><summary type="html"><![CDATA[LoRa MySensors API gateway connected to HomeAssistant raspberry PI4. Best match for long distance sensors and actuators]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/easysensors-nanoshield-LoRa.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/easysensors-nanoshield-LoRa.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Wireless Arduino compatible DIN rail relay with LoRa or RFM 69 radio on board.</title><link href="http://localhost:4000/Nano-Relay.html" rel="alternate" type="text/html" title="Wireless Arduino compatible DIN rail relay with LoRa or RFM 69 radio on board." /><published>2022-09-22T00:00:00+03:00</published><updated>2022-09-22T00:00:00+03:00</updated><id>http://localhost:4000/Nano-Relay</id><content type="html" xml:base="http://localhost:4000/Nano-Relay.html"><![CDATA[<blockquote>
  <p><a href="https://github.com/EasySensors/nanoRelayBox/blob/master/nanoRelayBox.ino">GitHub code repo link</a></p>
</blockquote>

<p><img src="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_1cr.jpg?raw=true" alt="nano Relay Box" />
<img src="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_2cr.jpg?raw=true" alt="nano Relay Box" />
<img src="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_3cr.jpg?raw=true" alt="nano Relay Box" /></p>

<h3 id="the-nano-relay-box--is-a-low-cost-wireless-220-volts-8-relay-board--arduino-nano-micro-controller-with-rfm-69-hw-radio-on-board-optional-nrf24l01--onboard-220-volts-hlk-5m05--power-supply--secure-authentication-with-atsha204a-crypto-authentication-optional-footprint-available-best-suitable-for-home-automation-iot">The Nano Relay Box  is a low cost wireless 220 Volts 8 Relay board.  Arduino Nano micro-controller with RFM 69 HW radio on board (optional NRF24L01+).  Onboard 220 Volts HLK-5M05  power supply . Secure authentication with ATSHA204A crypto-authentication (optional, footprint available). Best suitable for Home Automation, IOT.</h3>

<h2 id="specification">Specification:</h2>
<ul>
  <li>Authentication security - Atmel ATSHA204A Crypto Authentication Chip (optional, footprint available)</li>
  <li>External JDEC EPROM (optional, footprint available)</li>
  <li>RFM69-HW (high power version) 433 - 868 - 915 MHz Radio transceiver</li>
  <li>NRF24L01+ (optional, footprint available)</li>
  <li>2 x Power Relays capable to hold current up to 20A</li>
  <li>6 x Relays capable to hold current up to 10A</li>
  <li>8 LED’s indicating Relay Status</li>
  <li>7 pins terminal with 4 Analog GPIO, 3.3v  and 5v</li>
  <li>Supply voltage 240 Volts AC for <a href="http://www.hlktech.net/product_detail.php?ProId=60">HLK-5M05</a>  power supply</li>
  <li>Protection:<br />
 Fuses for 10A relays<br /></li>
  <li>Din rail plastic enclosure</li>
  <li>Enclosure  dimensions 145x90x40</li>
</ul>

<p><strong>Pin out:</strong></p>

<table>
  <thead>
    <tr>
      <th>Arduino Pins</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>A2</td>
      <td>Controls unfused Power Relay1. Current up to 20A</td>
    </tr>
    <tr>
      <td>D7</td>
      <td>Controls unfused Power Relay2. Current up to 20A</td>
    </tr>
    <tr>
      <td>A0</td>
      <td>Controls fused Relay1. Current up to 10A</td>
    </tr>
    <tr>
      <td>D6</td>
      <td>Controls fused Relay2. Current up to 10A</td>
    </tr>
    <tr>
      <td>D5</td>
      <td>Controls fused Relay3. Current up to 10A</td>
    </tr>
    <tr>
      <td>D4</td>
      <td>Controls fused Relay4. Current up to 10A</td>
    </tr>
    <tr>
      <td>D3</td>
      <td>Controls fused Relay5. Current up to 10A</td>
    </tr>
    <tr>
      <td>A1</td>
      <td>Controls fused Relay6. Current up to 10A</td>
    </tr>
    <tr>
      <td>A3</td>
      <td>Connected to ATSHA204A footprint</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Arduino Pins</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>GND, 3.3V,5V, A7, A6, A5, A4</td>
      <td>connected to grey terminals</td>
    </tr>
  </tbody>
</table>

<h2 id="how-to-use-it-as-home-automation-iot-node-relay">How to use it as home automation (IOT) node Relay</h2>

<p>nanoRelayBox.ino is the Arduino example sketch using <a href="https://www.mysensors.org/">MySensors</a> API.</p>

<p>Burn the miniRelayBox.ino sketch into it and it will became  one of the MySensors home automation network Relay Node. The Relay could be controlable from a smarthome controller web interface or smarphone App. 
To create Home Automation Network you need smarthome controller and at least two Nodes one as a Sensor, relay or actuator Node and the other one as “Gateway Serial” connected to the smarthome controller. I personally love <a href="https://domoticz.com/">Domoticz</a> as home automation conroller. Please check this <a href="https://github.com/EasySensors/ButtonSizeNode/blob/master/DomoticzInstallMySensors.md">HowTo</a> to install Domoticz.</p>

<p>However, for no-controller setup, as example, you can use 3 nodes - first node as “Gateway Serial”, second node as the Mini Relay Box node and the last one as switch for the relay node. No controller needed then, keep the switch and the relay node on the same address and the switch will operate the relay node.</p>

<p>Things worth mentioning about the  <a href="https://www.mysensors.org/">MySensors</a> Arduino sketch:</p>

<table>
  <thead>
    <tr>
      <th>Code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>#define MY_RADIO_RFM69<br />#define MY_RFM69_FREQUENCY   RF69_433MHZ<br />#define MY_IS_RFM69HW</td>
      <td>Define which radio we use – here is RFM 69<br />with frequency 433 MHZ and it is HW<br />type – one of the most powerful RFM 69 radios.<br />If your radio is RFM69CW - comment out line<br />with // #define MY_IS_RFM69HW</td>
    </tr>
    <tr>
      <td>#define MY_NODE_ID 0xE0</td>
      <td>Define Node address (0xE0 here). I prefer to use static addresses<br /> and in Hexadecimal since it is easier to identify the node<br /> address in  <a href="https://domoticz.com/">Domoticz</a> devices list after it<br /> will be discovered by controller ( <a href="https://domoticz.com/">Domoticz</a>).<br /> However, you can use AUTO instead of the hardcoded number<br /> (like 0xE0) though.  <a href="https://domoticz.com/">Domoticz</a> will automatically assign node ID then.</td>
    </tr>
    <tr>
      <td>#define MY_OTA_FIRMWARE_FEATURE<br />#define MY_OTA_FLASH_JDECID 0x2020</td>
      <td>Define OTA feature. OTA stands for “Over The Air firmware updates”.<br /> If your node does not utilize Sleep mode you can send new “firmware”<br /> (compiled sketch binary) by air. <strong>Here is the link on how to do it.</strong> <br />For OTA we use JDEC Flash chip where the node stores<br /> new firmware and once it received and controlsum (CRC) is correct<br />  it reboots and flashes your new code into the node<br /> controller. So we define it is “erase type” as 0x2020 here.</td>
    </tr>
    <tr>
      <td>#define MY_SIGNING_ATSHA204 <br />#define  MY_SIGNING_REQUEST_SIGNATURES</td>
      <td>Define if you like to use Crypto Authentication to secure your nodes<br /> from intruders or interference. After that, you have to “personalize”<br /> all the nodes, which have those, defines enabled.<br /> <a href="https://github.com/EasySensors/ButtonSizeNode/blob/master/SecurityPersonalizationHowTo.md"><strong>How to “personalize” nodes with encryption key</strong></a>.<br /> You need both defines in the nodes you need to protect.<br /> The Gateway Serial could be with only one of those<br /> defines enabled - #define MY_SIGNING_ATSHA204</td>
    </tr>
  </tbody>
</table>

<p>Connect the Relay to FTDI USB adaptor, Select Pro Mini 8MHz board in Arduino IDE and upload the miniRelayBox.ino sketch.</p>

<p><strong>Done</strong></p>

<p>The board is created by  <a href="https://www.openhardware.io/user/143/projects/Koresh">Koresh</a>
<img src="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_4.jpg?raw=true" alt="nano Relay Box" /><img src="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_1.jpg?raw=true" alt="nano Relay Box" /><img src="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_2.jpg?raw=true" alt="nano Relay Box" /><img src="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_3.jpg?raw=true" alt="nano Relay Box" /></p>]]></content><author><name>easySensors team</name></author><category term="LoRa-RFM" /><summary type="html"><![CDATA[Comes with DIN rail enclosure.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_4cr.jpg?raw=true" /><media:content medium="image" url="https://github.com/EasySensors/nanoRelayBox/blob/master/pics/Arduino_nano_relay_box_4cr.jpg?raw=true" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Wireless Arduino compatible PIR with LoRa or RFM 69 radio on board.</title><link href="http://localhost:4000/PIR.html" rel="alternate" type="text/html" title="Wireless Arduino compatible PIR with LoRa or RFM 69 radio on board." /><published>2022-09-22T00:00:00+03:00</published><updated>2022-09-22T00:00:00+03:00</updated><id>http://localhost:4000/PIR</id><content type="html" xml:base="http://localhost:4000/PIR.html"><![CDATA[<p><img src="https://github.com/EasySensors/easyPIRmultisensorsBox2/blob/master/pics/Easy_PIR_BOTTOMnew.png?raw=true" alt="Arduino PIR" /></p>

<h2 id="the-easypirmultisensorsbox-is-a-low-cost-wireless-arduino-ide-compatible-the-atmel-atmega328p-8mhz-microcontroller-with--rfm-69-cw-or-rfm-69-hcw-or-rfm-95-lora--radios-on-board-and-few-other-nice-additions"><strong>The easyPIRmultisensorsBox is a low cost wireless Arduino IDE compatible (the Atmel ATMega328P 8MHz) microcontroller with  RFM 69 CW or RFM 69 HCW or RFM 95 LoRa  radios on board and few other nice additions.</strong></h2>

<p>Best sutable for Home Automation, IOT.  You may think of it as Arduino Pro Mini plus all the items in the picture below:</p>

<p><img src="https://github.com/EasySensors/easyPIRmultisensorsBox2/blob/master/pics/replcePIR3.jpg?raw=true" alt="Arduino PIR" /></p>

<blockquote>
  <p><a href="https://github.com/EasySensors/easyPIRmultisensorsBox2/blob/master/easyPirPCINTdoorSensorTindie.ino">GitHub code repo link</a></p>
</blockquote>

<h2 id="specification">Specification:</h2>

<ul>
  <li>MCU Atmel ATMega328P 8MHz) microcontroller</li>
  <li>Radio- HopeRF RFM 69 CW or RFM 69 HCW or RFM 95 LoRa  (915, 868 0r 433 MHz) radio on board</li>
  <li>Enclosure dimensions 95mm<em>40mm</em>20mm</li>
  <li>Powered by two AA batteries</li>
  <li>Booster converter alows to work from batteries drained as low as 0.7V combined</li>
  <li>Wide operating temperature range. Tested -20 +40 Celsius</li>
  <li>PIR sensor Am312</li>
  <li>Temperature and humidity sensor SHTC3</li>
  <li>High Accuracy Temperature Sensor ±0.4 °C (max), –10 to 85 °C</li>
  <li>Precision Relative Humidity Sensor ± 3% RH (max), 0–80% RH</li>
  <li>Light sensor BH1750,  spectral responsibility is approximately human eye response.</li>
  <li>Authentication security - Atmel ATSHA204A Crypto Authentication Chip</li>
  <li>Dualoptiboot bootloader. Implements over the air (OTA) firmware update ability</li>
  <li>FTDI  header for programming</li>
  <li>Reverse polarity protection.</li>
  <li>Arduino pins A0 A1 have pads on PCB for any special needs.</li>
  <li>PIR triggers interrupt PCINT23 D7</li>
  <li>Magnet sensor triggers hardware interrupt 1</li>
</ul>

<p><strong>Pin out:</strong></p>

<table>
  <thead>
    <tr>
      <th>Arduino Pins</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>A0, A1</td>
      <td>Available ARDUINO analog GPIO / DIGITAL GPIO as PCB pads close to radio module</td>
    </tr>
    <tr>
      <td>A4</td>
      <td>Connected to sensors i2c</td>
    </tr>
    <tr>
      <td>A5</td>
      <td>Connected to sensors i2c</td>
    </tr>
    <tr>
      <td>A6</td>
      <td>Battery sensing voltage divider 1M/470k</td>
    </tr>
    <tr>
      <td>A3</td>
      <td>Connected to  ATSHA204A</td>
    </tr>
    <tr>
      <td>D3</td>
      <td>Connected to  Magnet sensor</td>
    </tr>
    <tr>
      <td>D4</td>
      <td>Connected to RFM 69/95 DIO1</td>
    </tr>
    <tr>
      <td>D5</td>
      <td>Connected to  GREEN_LED_PIN</td>
    </tr>
    <tr>
      <td>D6</td>
      <td>Connected to  RED_LED_PIN</td>
    </tr>
    <tr>
      <td>D7</td>
      <td>Connected to  PIR sensor  PCINT23 (Older version of the board had PIR was connected to D3 INT1)</td>
    </tr>
    <tr>
      <td>D8</td>
      <td>Connected to CS FLASH chip (OTA) M25P40</td>
    </tr>
    <tr>
      <td>D2</td>
      <td>Connected to RFM 69/95 DIO0</td>
    </tr>
    <tr>
      <td>D9</td>
      <td>Connected to RFM 69/95 Reset pin</td>
    </tr>
    <tr>
      <td>D10</td>
      <td>Connected to RFM 69/95 CS/NSS</td>
    </tr>
    <tr>
      <td>D11</td>
      <td>Connected to  MOSI</td>
    </tr>
    <tr>
      <td>D12</td>
      <td>Connected to  MISO</td>
    </tr>
    <tr>
      <td>D13</td>
      <td>Connected to  SCK</td>
    </tr>
  </tbody>
</table>

<p><img src="https://github.com/EasySensors/easyPIRmultisensorsBox2/blob/master/pics/FTDIpinout.png?raw=true" alt="enter image description here" /></p>

<p><strong>Arduino IDE Settings</strong></p>

<p><img src="https://github.com/EasySensors/ButtonSizeNode/blob/master/pics/IDEsettings.jpg?raw=true" alt="Arduino IDE Settings" /></p>

<p><strong>programming FTDI adapter connection</strong></p>

<p><img src="https://github.com/EasySensors/ButtonSizeNode/blob/master/pics/FTDIvcc5-3.jpg?raw=true" alt="enter image description here" /></p>

<p><strong>Old and new versions</strong></p>

<p><img src="https://github.com/EasySensors/easyPIRmultisensorsBox2/blob/master/pics/NewOldPIR.jpg?raw=true" alt="enter image description here" /></p>

<h2 id="how-to-use-it-as-home-automation-iot-node-controller">How to use it as home automation (IOT) node controller</h2>

<p>easyPirPCINTdoorSensor.ino is the Arduino example sketch using <a href="https://www.mysensors.org/">MySensors</a> API.</p>

<p>Connect the Node to FTDI USB adaptor, Select Pro Mini 8MHz board in Arduino IDE and upload the example sketch sketch.
The skecth will create node fith fixed address in Mysensors network.</p>

<p>The Sketch will create a number of sensors for a controller which you can use or ignore (comment it out in the code).
PIR_sensor - actual PIR sensor which toggles 0 and 1 when something moving around
VIS_sensor  - The code reports new LUX readings each time the PIR sensor wakes up the unit. 
DummyDimmerLUXvalue_sensor - well, this is a workaround for the PIR threshold.  By default when a fresh unit uploaded with the new code, PIR sensor changes will always be reported. If you like to make it less sensitive add  DummyDimmerLUXvalue_sensor  as dimmer in the controller and set maximum LUX value when PIR reports movement. I could not find any easier way sending values back to the sensor from conroller so far.</p>

<p>HUM_sensor - humidity sensor. The code reports a new value if any changes in humidity readings happened after the PIR sensor wakes up the unit. 
TEMP_sensor - The code reports a new temperature if any changes happened after the PIR sensor wakes up the unit.</p>

<p>MAG_sensor - magnet sensor, since the board has the magnetic sensor soldered the sketch shares the same code as for door sensor. Same reporting logic for the temperature and Humidity applied for the magnet sensor. Comment it out if you do not need it.</p>

<p><strong>Done</strong></p>

<p><a href="https://github.com/EasySensors/easyPIRmultisensorsBox2/blob/master/Schematics_pir_magnet_window_sensor.PDF">Schematics</a></p>

<p>The board designed by  <a href="https://www.openhardware.io/user/143/projects/Koresh">Koresh</a></p>]]></content><author><name>easySensors team</name></author><category term="LoRa-RFM" /><summary type="html"><![CDATA[Comes with nice enclosure, light and Temp Humidity sensors.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://github.com/EasySensors/easyPIRmultisensorsBox2/blob/master/pics/Easy_PIR_MAIN_new.png?raw=true" /><media:content medium="image" url="https://github.com/EasySensors/easyPIRmultisensorsBox2/blob/master/pics/Easy_PIR_MAIN_new.png?raw=true" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">easyActuator is wireless Arduino compatible actuator with LoRa or RFM 69 radio on board.</title><link href="http://localhost:4000/actuator.html" rel="alternate" type="text/html" title="easyActuator is wireless Arduino compatible actuator with LoRa or RFM 69 radio on board." /><published>2022-09-22T00:00:00+03:00</published><updated>2022-09-22T00:00:00+03:00</updated><id>http://localhost:4000/actuator</id><content type="html" xml:base="http://localhost:4000/actuator.html"><![CDATA[<blockquote>
  <p><a href="https://github.com/EasySensors/easyActuator/blob/master/EasyblindsActuatorNodeTMC2208AccelStepper.ino">GitHub code repo link</a></p>
</blockquote>

<p><img src="https://github.com/EasySensors/easyActuator/blob/master/pcs/ACTUATOR_BOTTOM.jpg?raw=true" alt="easyActuator Blinds Actuator Driver" />
<img src="https://github.com/EasySensors/easyActuator/blob/master/pcs/ACTUATOR_PCB_TOP.jpg?raw=true" alt="easyActuator Blinds Actuator Driver" />
<img src="https://github.com/EasySensors/easyActuator/blob/master/pcs/ACTUATOR_PCB_TOP_LR.jpg?raw=true" alt="easyActuator Blinds Actuator Driver" /></p>

<h3 id="the-easyactuator-is-based-on-tmc2208-silent-stepper-driver-it-can-control-stepper-motor-and-is-capable-of-driving-up-to-2a-of-current-from-each-output-the-board-controlled-with-with-lora-rfm95-or-rfm69-hcw-radio">The easyActuator is based on TMC2208 silent stepper driver. It can control stepper motor and is capable of driving up to 2A of current from each output. The board controlled with with Lora RFM95 or RFM69-HCW radio</h3>

<h2 id="specification">Specification:</h2>

<ul>
  <li>LoRa RFM 95 or RFM69 HCW 915/868/433 MHz radios</li>
  <li>Dimensions 96mm x 61mm x 30mm</li>
  <li>Power supply voltage up to 9-25 Volts 3A with 5.5mm x 2.5mm Male Jack</li>
  <li>FTDI  header for programming</li>
  <li>Any NEMA17 4-wire motor</li>
  <li>TMS2208 silent motor driver up to 2A motor current</li>
  <li>Software setup for speed and current control</li>
  <li>Authentication security - Atmel ATSHA204A Crypto Authentication Chip</li>
  <li>Dualoptiboot bootloader. Implements over the air (OTA) firmware update ability</li>
  <li>The Digital and Analog pins are 3.3 volts</li>
  <li>Enclosure with travel and setup buttons</li>
</ul>

<h2 id="pinout">pinout</h2>

<ul>
  <li>A3  Connected to ATSHA204A - Crypto Authentication chip</li>
  <li>D2  RFM95\69 DIO0</li>
  <li>A2  RFM95\69 Reset pin</li>
  <li>D10 RFM95\69 CS/NSS</li>
  <li>D11 MOSI</li>
  <li>D12 MISO</li>
  <li>D13 SCK</li>
  <li>D4 LEDpin</li>
  <li>D9 // TMC2208 DIAG</li>
  <li>D6 DIR</li>
  <li>D7 STEP</li>
  <li>D5 ENBL</li>
  <li>A5 SW_RX  // TMC2208  SoftwareSerial receive pin</li>
  <li>
    <p>A4 SW_TX  // TMC2208  SoftwareSerial transmit pin</p>
  </li>
  <li>D3 travel button - “closePressed” in the code</li>
  <li>A0 travel button - “openPressed” in the code</li>
  <li>A1 travel setup button “calibrationPressed” in the code</li>
</ul>

<p><img src="https://github.com/EasySensors/easyActuator/blob/master/pcs/easyBlindsActuatorButtons.jpg?raw=true" alt="easyActuator Blinds Actuator Driver" />
<img src="https://github.com/EasySensors/easyActuator/blob/master/pcs/easyBlindsActuatorLED.jpg?raw=true" alt="easyActuator Blinds Actuator Driver" /></p>

<p>Libraries used:</p>

<p>AccelStepper credit to airspayce http://www.airspayce.com/mikem/arduino/AccelStepper/classAccelStepper.html#a5dce13ab2a1b02b8f443318886bf6fc5</p>

<p>TMCStepper credit to Teemu Mäntykallio 
https://github.com/teemuatlut/TMCStepper</p>]]></content><author><name>easySensors team</name></author><category term="LoRa-RFM" /><summary type="html"><![CDATA[Comes with enclosure. Based on TMC2208 silent stepper driver.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://github.com/EasySensors/easyActuator/blob/master/pcs/ACTUATOR_MAIN.jpg?raw=true" /><media:content medium="image" url="https://github.com/EasySensors/easyActuator/blob/master/pcs/ACTUATOR_MAIN.jpg?raw=true" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Low cost wireless Arduino compatible sensor with LoRa or RFM 69 radio on board.</title><link href="http://localhost:4000/button-sized-node-V3.html" rel="alternate" type="text/html" title="Low cost wireless Arduino compatible sensor with LoRa or RFM 69 radio on board." /><published>2022-09-22T00:00:00+03:00</published><updated>2022-09-22T00:00:00+03:00</updated><id>http://localhost:4000/button-sized-node-V3</id><content type="html" xml:base="http://localhost:4000/button-sized-node-V3.html"><![CDATA[<h2 id="full-version">Full Version</h2>
<p><img src="https://github.com/EasySensors/ButtonSizeNode3/blob/master/pics/BS3_TOP.jpg?raw=true" alt="The Button Size Node 3" /></p>

<h2 id="light-version">Light Version</h2>
<p><img src="https://github.com/EasySensors/ButtonSizeNode3/blob/master/pics/BS3_LITE_TOP.jpg?raw=true" alt="The Button Size Node 3" />
<img src="https://github.com/EasySensors/ButtonSizeNode3/blob/master/pics/BS3_LITE_BOTTOM_RADIO.jpg?raw=true" alt="The Button Size Node 3" />
<img src="https://github.com/EasySensors/ButtonSizeNode3/blob/master/pics/BS3_LITE_BOTTOM.jpg?raw=true" alt="The Button Size Node 3" /></p>

<h2 id="the-button-size-node-3-is-a-low-cost-wireless-arduino-ide-compatible-the-atmel-atmega328p-8mhz-microcontroller-with-lora-rfm-95-or-rfm-69-hwcw-radio-on-board-and-few-other-nice-additions"><strong>The Button Size Node 3 is a low cost wireless Arduino IDE compatible (the Atmel ATMega328P 8MHz) microcontroller with LoRa RFM 95 or RFM 69 HW(CW) radio on board and few other nice additions.</strong></h2>

<p>Best suitable for Home automation, IOT. Could be used as core board for radio controlling any DIY project. You may think of it as Arduino Pro Mini plus all the items in the picture below::</p>

<p><img src="https://github.com/EasySensors/ButtonSizeNode/blob/master/pics/replceA.jpg?raw=true" alt="" /></p>

<h2 id="specification">Specification:</h2>
<ul>
  <li>4 Layers PCB with larger ground plane improving range. 20-40% range increase according to our field tests.</li>
  <li>Dimensions 45mm x 23mm</li>
  <li>Wide operating temperature range. Tested -20 +40 Celsius</li>
  <li>Sleep current consumption 9 - 12 uA</li>
  <li>Temperature and humidity sensor Si7021</li>
  <li>High Accuracy Temperature Sensor ±0.4 °C (max), –10 to 85 °C</li>
  <li>Precision Relative Humidity Sensor ± 3% RH (max), 0–80% RH</li>
  <li>Light sensor BH1750,  spectral responsibility is approximately human eye response.</li>
  <li>OTA FLASH (W25X40CLNIG)</li>
  <li>Accelerometer LIS3DH (<strong>Full version only</strong>)</li>
  <li>Barometer BMP280 (Full <strong>Full version only</strong>)</li>
  <li>Magnet sensor SM351LT (<strong>Full version only</strong>)</li>
  <li>Authentication security - Atmel ATSHA204A Crypto Authentication Chip</li>
  <li>External JDEC EPROM</li>
  <li>Dualoptiboot bootloader. Implements over the air (OTA) firmware update ability</li>
  <li>LoRa RFM 95 or RFM 69-HW (high power version) or CW (low power consumption version) 915, 868 or 433 MHz Radio transceivers</li>
  <li>Battery voltage sensor (via divider)</li>
  <li>Supply voltage  3.5-10 Volts</li>
  <li>The Digital and Analog pins are 3.3 volts</li>
  <li>Powered by two CR2032 batteries in series with high-efficiency power converter (3.5-10V).</li>
  <li>FTDI  header for programming</li>
  <li>LED connected to pin 6</li>
  <li>Reset button</li>
</ul>

<blockquote>
  <p><a href="https://github.com/EasySensors/ButtonSizeNode3/blob/master/ButtonSizeNode3Full.ino">GitHub code repo link</a></p>
</blockquote>

<p><strong>Pin out:</strong></p>

<table>
  <thead>
    <tr>
      <th>Arduino Pins</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Pin A0, A1</td>
      <td>Available ARDUINO analog GPIO / DIGITAL GPIO</td>
    </tr>
    <tr>
      <td>Pin A2</td>
      <td>RFM69/95 reset pin</td>
    </tr>
    <tr>
      <td>Pin A6</td>
      <td>Connected to Battery voltage sensor (via divider) 3M/470k</td>
    </tr>
    <tr>
      <td>Pin A4</td>
      <td>Connected to sensors i2c</td>
    </tr>
    <tr>
      <td>Pin A5</td>
      <td>Connected to sensors i2c</td>
    </tr>
    <tr>
      <td>Pin A3</td>
      <td>Connected to  ATSHA204A</td>
    </tr>
    <tr>
      <td>Pin D3, D4, D5, D6,D7, D9</td>
      <td>Available ARDUINO digital GPIO</td>
    </tr>
    <tr>
      <td>Pin D4</td>
      <td>accelerometer interrupt PCINT20 connected</td>
    </tr>
    <tr>
      <td>Pin D5</td>
      <td>magnetic sensor state\interrupt PCINT21 connected</td>
    </tr>
    <tr>
      <td>Pin D6</td>
      <td>LED connected</td>
    </tr>
    <tr>
      <td>Pin D8</td>
      <td>Connected to CS FLASH chip (OTA) M25P40</td>
    </tr>
    <tr>
      <td>Pin D2</td>
      <td>Connected to RFM 69 DIO0</td>
    </tr>
    <tr>
      <td>Pin D9</td>
      <td>Connected to RFM 69 Reset pin</td>
    </tr>
    <tr>
      <td>Pin D10</td>
      <td>Connected to RFM 69 CS/NSS</td>
    </tr>
    <tr>
      <td>Pin D11</td>
      <td>MOSI</td>
    </tr>
    <tr>
      <td>Pin D12</td>
      <td>MISO</td>
    </tr>
    <tr>
      <td>Pin D13</td>
      <td>SCK</td>
    </tr>
    <tr>
      <td>Pin ANT</td>
      <td>RFM69 antenna</td>
    </tr>
    <tr>
      <td>Vcc and Bat+</td>
      <td>Unregulated power up to 6.5 Volts is connected before DC-DC converter</td>
    </tr>
    <tr>
      <td>Gnd</td>
      <td>Ground</td>
    </tr>
  </tbody>
</table>

<p><strong>Arduino IDE Settings</strong></p>

<p><img src="https://github.com/EasySensors/ButtonSizeNode/blob/master/pics/IDEsettings.jpg?raw=true" alt="Arduino IDE Settings" /></p>

<p><strong>Programming FTDI adapter connection</strong></p>

<p><img src="https://github.com/EasySensors/ButtonSizeNode/blob/master/pics/FTDIvcc5-3.jpg?raw=true" alt="enter image description here" /></p>

<p>Both 3.3V and 5V power options can be used.</p>

<h2 id="how-to-use-it-as-home-automation-iot-node-controller">How to use it as home automation (IOT) node controller</h2>

<p>ButtonSizeNode.ino is the Arduino example sketch using <a href="https://www.mysensors.org/">MySensors</a> API.</p>

<p>Connect the Node to FTDI USB adaptor, Select Pro Mini 8MHz board in Arduino IDE and upload the ButtonSizeNode.ino sketch. The skecth will create node fith fixed address in Mysensors network.</p>

<p><strong>Done</strong></p>

<p><a href="https://github.com/EasySensors/ButtonSizeNode3/blob/master/ButtonSizedNodeV3.pdf">Schematics</a></p>

<p>The board is created by  <a href="https://www.openhardware.io/user/143/projects/Koresh">Koresh</a></p>]]></content><author><name>easySensors team</name></author><category term="LoRa-RFM" /><summary type="html"><![CDATA[Comes with nice set of sensors and Atmel ATMega328P 8MHz the MCU.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://github.com/EasySensors/ButtonSizeNode3/blob/master/pics/BS3_TOP.jpg?raw=true" /><media:content medium="image" url="https://github.com/EasySensors/ButtonSizeNode3/blob/master/pics/BS3_TOP.jpg?raw=true" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Arduino Nano radio shield with LoRa or RFM 69 radio on board.</title><link href="http://localhost:4000/nano-shield-node.html" rel="alternate" type="text/html" title="Arduino Nano radio shield with LoRa or RFM 69 radio on board." /><published>2022-09-22T00:00:00+03:00</published><updated>2022-09-22T00:00:00+03:00</updated><id>http://localhost:4000/nano-shield-node</id><content type="html" xml:base="http://localhost:4000/nano-shield-node.html"><![CDATA[<h3 id="arduino-nano-radio-shield-rfm-69-cwhcw--or-nrf24l01-radio-on-board">Arduino Nano radio shield. RFM 69 CW(HCW)  or NRF24L01+ radio on-board.</h3>

<h2 id="features">Features</h2>
<ul>
  <li>PCB Dimensions 40x25mm</li>
  <li>Fully compartible with standard inexpensive Arduino Nano boards.</li>
  <li>All arduino pins are avaliable for Dupont wires.</li>
  <li>RFM69HW and NRF24l01 footprints</li>
  <li>SMA socket for external sub-GHz antenna for RFM 69 radio transceiver</li>
  <li>5v to 3.3v level convertor onboard (for radio and flash)</li>
  <li>Secure authentication - Atmel ATSHA204A Crypto Authentication Chip</li>
  <li>External JDEC EPROM for OTA\FOTA</li>
  <li>SD card reader onboard</li>
</ul>

<p><strong>CS and other Pins  connected to Arduino Nano:</strong></p>

<table>
  <thead>
    <tr>
      <th>Arduino Pins</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>A0</td>
      <td>Connected to SD card reader CS</td>
    </tr>
    <tr>
      <td>A3</td>
      <td>Connected to ATSHA204A - Crypto Authentication chip</td>
    </tr>
    <tr>
      <td>D8</td>
      <td>Connected to CS FLASH chip (OTA)</td>
    </tr>
    <tr>
      <td>D9</td>
      <td>Connected to RFM 69 Reset pin</td>
    </tr>
    <tr>
      <td>D10</td>
      <td>Connected to RFM 69 CS</td>
    </tr>
    <tr>
      <td>D2</td>
      <td>RFM DIO0 interrupt</td>
    </tr>
    <tr>
      <td>D11, D12, D13</td>
      <td>SPI interface</td>
    </tr>
    <tr>
      <td>A1, A2, A4, A5, D3, D4, D5, D6, D7</td>
      <td>Free available pins</td>
    </tr>
  </tbody>
</table>

<p><img src="https://github.com/EasySensors/nanoShield/blob/master/nano_rf_shiels_top2.jpg?raw=true" alt="Arduino Nano RFM sheild" /></p>

<p>*** The Arduino Nano is not included</p>

<p><img src="https://github.com/EasySensors/nanoShield/blob/master/nano_rf_shiels_top1.jpg?raw=true" alt="Arduino Nano RFM sheild" />
<img src="https://github.com/EasySensors/nanoShield/blob/master/nano_rf_shiels_bottom1.jpg?raw=true" alt="Arduino Nano RFM sheild" />
<img src="https://github.com/EasySensors/nanoShield/blob/master/nano_rf_shiels_bottom2.jpg?raw=true" alt="Arduino Nano RFM sheild" />
<img src="https://github.com/EasySensors/nanoShield/blob/master/nano_rf_shiels_bottomNRF.jpg?raw=true" alt="Arduino Nano RFM sheild" />
<img src="https://github.com/EasySensors/nanoShield/blob/master/schem.jpg?raw=true" alt="Arduino Nano RFM sheild" /></p>

<h2 id="package-content">Package Content:</h2>
<ul>
  <li>The radio shield board 1 pcs</li>
</ul>

<p>*** SMA antenna comes only with RFM 69 radio transceiver</p>]]></content><author><name>easySensors team</name></author><category term="LoRa-RFM" /><summary type="html"><![CDATA[Comes with nice enclosure.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://github.com/EasySensors/nanoShield/blob/master/nano_rf_shiels_top1.jpg?raw=true" /><media:content medium="image" url="https://github.com/EasySensors/nanoShield/blob/master/nano_rf_shiels_top1.jpg?raw=true" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Low cost wireless Arduino compatible switch with LoRa or RFM 69 radio on board.</title><link href="http://localhost:4000/switch-box-node.html" rel="alternate" type="text/html" title="Low cost wireless Arduino compatible switch with LoRa or RFM 69 radio on board." /><published>2022-09-22T00:00:00+03:00</published><updated>2022-09-22T00:00:00+03:00</updated><id>http://localhost:4000/switch-box-node</id><content type="html" xml:base="http://localhost:4000/switch-box-node.html"><![CDATA[<p><img src="https://github.com/EasySensors/switchBox/blob/master/pics/easySwitchBox3.jpg?raw=true" alt="arduino Switch Box" />
<img src="https://github.com/EasySensors/switchBox/blob/master/pics/easySwitchBox4.jpg?raw=true" alt="arduino Switch Box" />
<img src="https://github.com/EasySensors/switchBox/blob/master/pics/screwHoles.png?raw=true" alt="arduino Switch Box" /></p>

<h3 id="the-switch-box--is-a-low-cost-wireless-arduino-ide-compatible-the-atmel-atmega328p-microcontroller-with-hoperf-lora-rfm95--69-433868915-radio-on-board-best-sutable-for-home-automation-iot-could-be-used-as-switch-board-for-radio-controlling-any-diy-project-you-may-think-of-it-as-arduino-pro-mini-plus-all-the-items-in-the-picture-below">The Switch Box  is a low cost wireless Arduino IDE compatible (the Atmel ATMega328P) microcontroller with HopeRF LoRa RFM95 / 69 433/868/915 radio on-board. Best sutable for Home Automation, IOT. Could be used as switch board for radio controlling any DIY project. You may think of it as Arduino Pro Mini plus all the items in the picture below:</h3>

<p><img src="https://github.com/EasySensors/switchBox/blob/master/pics/replace2.jpg?raw=true" alt="" /></p>

<blockquote>
  <p><a href="https://github.com/EasySensors/switchBox/blob/master/EasySwitchBoxMySensors.ino">GitHub code repo link</a></p>
</blockquote>

<h1 id="features--specifications">Features &amp; Specifications</h1>
<h3 id="ide-control">IDE Control:</h3>
<ul>
  <li>Fully compatible with the Arduino IDE</li>
  <li>Enumerates as an Arduino Pro Mini @ 8 MHz</li>
  <li>Compatible with all RFM 69 \ 95 compatible open source libraries available
    <h3 id="radio-transceivers">Radio Transceivers:</h3>
    <p>Three transceiver options are available</p>
  </li>
  <li>HopeRF RFM95 LoRa® 433/868/915 MHz (long-range version)</li>
  <li>HopeRF RFM69-HCW 433/868/915 MHz (mid-range version)</li>
  <li>HopeRF RFM69-CW 433/868/915 MHz (low power consumption version)</li>
  <li>Footprint available for replacing  RFM radios with NRF24L01+ 2.4 GHz radio
    <h3 id="security">Security:</h3>
  </li>
  <li>On-board Atmel/Microchip ATSHA204A crypto-authentication chip provides secured handshakes
    <h3 id="antennas">Antennas:</h3>
    <p>Tuned PCB antenna options that are soldered to the main board</p>
  </li>
  <li>915 MHz - United States, Canada, Australia</li>
  <li>868 MHz - Europe</li>
  <li>433 MHz - Europe
    <h3 id="interface">Interface:</h3>
  </li>
  <li>Long-run soft-touch buttons similar to high-quality home switches</li>
  <li>Each button has a built-in LED for message delivery confirmation</li>
  <li>Reset switch
    <h3 id="power">Power:</h3>
    <p>Utilizes two CR2032 coin cell batteries</p>
  </li>
  <li>On-board coin cell holders</li>
  <li>Reverse polarity protection</li>
  <li>High-efficiency power converter</li>
  <li>Batteries can last as long as two years with daily use</li>
  <li>Battery voltage sensor (via divider)</li>
  <li>Sleep current consumption 5uA
    <h3 id="mounting">Mounting:</h3>
    <p>Two options are provided for mounting</p>
  </li>
  <li>Adhesive tape on the back</li>
  <li>Screws through holes in the back plate</li>
  <li>Dimensions 86*86*16 mm</li>
</ul>

<p><strong>Pin out:</strong></p>

<table>
  <thead>
    <tr>
      <th>Arduino Pins</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>pin A6</td>
      <td>Connected to Battery voltage sensor (via divider)</td>
    </tr>
    <tr>
      <td>pin A3</td>
      <td>Connected to  ATSHA204A</td>
    </tr>
    <tr>
      <td>pin D4, D8, A0</td>
      <td>Connected to momentary switch buttons</td>
    </tr>
    <tr>
      <td>pin Interrupt 1</td>
      <td>Occurs when either button is pressed</td>
    </tr>
    <tr>
      <td>pin D5, D6, D7</td>
      <td>Connected to LED’s</td>
    </tr>
  </tbody>
</table>

<p><img src="https://github.com/EasySensors/switchBox/blob/master/pics/buttonsLEDPinout.png?raw=true" alt="arduino Switch Box" /></p>

<p><strong>Arduino IDE Settings</strong></p>

<p><img src="https://github.com/EasySensors/ButtonSizeNode/blob/master/pics/IDEsettings.jpg?raw=true" alt="Arduino IDE Settings" /></p>

<p><strong>programming FTDI adapter connection</strong></p>

<p><img src="https://github.com/EasySensors/SwitchNode/blob/master/pics/FTDIvcc3.jpg?raw=true" alt="FTDI Power" /></p>

<p>3.3V power option should be used.</p>

<h3 id="the-arduino-example-sketches">the Arduino example sketches</h3>

<p>Easy sensors API sketches. Can use both LoRa RFM95 and RFM69 radios
EasySwitchBoxMySensors.ino  - the switchBox Sketch
GatewaySerialMySensors.ino - the receiver serial Gateway Sketch</p>

<p>Moteino API sketches. RFM69 radio used
Moteino.ino  - the switchBox Sketch
MoteinoGW.ino  the receiver Sketch</p>

<p>RadioHead API sketches. LoRaRFM95 radio used<br />
rf95_reliable_datagram_server.ino  the receiver Sketch
RHswitchBox.ino  - the switchBox Sketch</p>

<p>Design files link.
https://circuitmaker.com/Projects/Details/Yury-Sviryda/EasySwitchBox</p>

<h2 id="how-to-use-it-as-home-automation-iot-node-controller">How to use it as home automation (IOT) node controller</h2>

<p>EasySwitchBoxMySensors.ino is the Arduino example sketch using <a href="https://www.mysensors.org/">MySensors</a> API.</p>

<p>Burn the sketch into and the switchBox will became  one of the MySensors home automation network Node. 
To create the network you need controller and at least two Nodes one as a Sensor, relay or switch Node and the other one as 
“Gateway Serial”. I personally love <a href="https://domoticz.com/">Domoticz</a> as conroller. Please check this <a href="https://github.com/EasySensors/ButtonSizeNode/blob/master/DomoticzInstallMySensors.md">HowTo</a> to install Domoticz.</p>

<p><strong>Done</strong></p>

<p>The board is created by  <a href="https://www.openhardware.io/user/143/projects/Koresh">Koresh</a></p>

<h3 id="prototype-history">Prototype history</h3>

<p><img src="https://github.com/EasySensors/switchBox/blob/master/pics/easySwitchBox6.jpg?raw=true" alt="arduino Switch Box" /></p>]]></content><author><name>easySensors team</name></author><category term="LoRa-RFM" /><summary type="html"><![CDATA[Comes with nice enclosure.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://github.com/EasySensors/switchBox/blob/master/pics/easySwitchBox2_cr.jpg?raw=true" /><media:content medium="image" url="https://github.com/EasySensors/switchBox/blob/master/pics/easySwitchBox2_cr.jpg?raw=true" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Made for ESPHome project. Wireles latching relay.</title><link href="http://localhost:4000/6-way-relay.html" rel="alternate" type="text/html" title="Made for ESPHome project. Wireles latching relay." /><published>2022-09-21T00:00:00+03:00</published><updated>2022-09-21T00:00:00+03:00</updated><id>http://localhost:4000/6-way-relay</id><content type="html" xml:base="http://localhost:4000/6-way-relay.html"><![CDATA[<div align="right">
	<br />
	<a href="https://www.aliexpress.com/item/3256804487808973.html">
		<img src="docs/ali_buy_btn.png" alt="Click to buy from Aliexpress" />
	</a>
	<br />
</div>

<h3 id="esp32-s2-module-based-6-gang-30-amps-latch-relay-in-din-rail-enclosure-best-sutable-for-secure-home-automation-iot">ESP32-S2 module based 6 Gang 30 Amps Latch Relay in DIN Rail enclosure. Best sutable for secure Home Automation, IOT.</h3>

<h2 id="specification">Specification</h2>

<ul>
  <li>ESP32-S2 Matter ready chipset</li>
  <li>Embedded IPX to SMA adapter, 3dBi antenna, any SMA Wi-Fi antenna can be used.</li>
  <li>USB type C programming\debug connector, on board CP2102 USB-TTL converter</li>
  <li>6 x 32 Amper Latch Relays, zero current idle consumption, suitable for any type of loads</li>
  <li>32A terminals, 10-22AWG, 4mm2</li>
  <li>6 x Optocoupled switch inputs</li>
  <li>6 x Tact buttons + reset button</li>
  <li>2 x  Dallas temperature sensor pins with 5 kilohm pull up resistors</li>
  <li>6 x status LED’s + 2 status LED’s</li>
  <li>High quality power supply, input voltage 85-305 Volts AC</li>
  <li>DIN rail plastic enclosure dimensions 150x106x42mm</li>
  <li>Board Dimensions 147x87mm</li>
</ul>

<div align="left">
                <span><img src="docs/made-for-esphome-black-on-transparent.svg" width="225" height="123" /></span>
</div>

<blockquote>
  <p><a href="https://github.com/EasySensors/6Gang30AmpsLatchRelayEspHomeReady/blob/main/docs/ES%D0%9732_RELAYS_SCH_V1.PDF">The board schematics Pdf link</a></p>
</blockquote>

<blockquote>
  <p><a href="https://github.com/EasySensors/6Gang30AmpsLatchRelayEspHomeReady/blob/main/6Gang30AmpsLatchRelay.yaml">ESPHome YAML GitHub code repo link</a></p>
</blockquote>

<h2 id="installation-or-wifi-password-setup">Installation or WiFi password setup</h2>

<p>You can use the button below to install the pre-built firmware or change WiFi pasword.</p>
<blockquote>
  <p><a href="https://easysensors.github.io/6Gang30AmpsLatchRelayEspHomeReady">the button  is visible from the 6Gang30AmpsLatchRelayEspHomeReady web page</a></p>
</blockquote>

<esp-web-install-button manifest="./manifest.json"></esp-web-install-button>
<script type="module" src="https://unpkg.com/esp-web-tools@8.0.3/dist/web/install-button.js?module"></script>

<h3 id="installation-video">Installation video</h3>
<video muted="" autoplay="" controls="">
<source src="https://user-images.githubusercontent.com/18707133/182823948-121f1ef6-083b-4721-bfba-ffdc3a942aeb.mp4" type="video/mp4" />
</video>

<p>To tweak the YAML code in 6Gang30AmpsLatchRelay.yaml and burn it into the board</p>
<ul>
  <li>
    <p>follow instructions in the link below and install  ESPHome
<a href="https://esphome.io/guides/installing_esphome.html"> Installing ESPHome Manually</a></p>
  </li>
  <li>
    <p>compile and upload with command-line:
 <code class="language-plaintext highlighter-rouge">esphome run 6Gang30AmpsLatchRelay.yaml</code></p>
  </li>
</ul>

<p><img src="https://github.com/EasySensors/6Gang30AmpsLatchRelayEspHomeReady/blob/main/docs/esp32_relays_din_rail_enclosure1.jpg?raw=true" alt="6 Gang 30Amps Din Rail Latch Relay" />
<img src="https://github.com/EasySensors/6Gang30AmpsLatchRelayEspHomeReady/blob/main/docs/collage.jpg?raw=true" alt="6 Gang 30Amps Din Rail Latch Relay" />
<img src="https://github.com/EasySensors/6Gang30AmpsLatchRelayEspHomeReady/blob/main/docs/esp32_relays_din_rail_enclosure4.jpg?raw=true" alt="6 Gang 30Amps Din Rail Latch Relay" />
<img src="https://github.com/EasySensors/6Gang30AmpsLatchRelayEspHomeReady/blob/main/docs/esp32_relays_din_rail_enclosure2.jpg?raw=true" alt="6 Gang 30Amps Din Rail Latch Relay" />
<img src="https://github.com/EasySensors/6Gang30AmpsLatchRelayEspHomeReady/blob/main/docs/esp32_relays_bottom.png?raw=true" alt="6 Gang 30Amps Din Rail Latch Relay" />
<img src="https://github.com/EasySensors/6Gang30AmpsLatchRelayEspHomeReady/blob/main/docs/esp32_relays_top.png?raw=true" alt="6 Gang 30Amps Din Rail Latch Relay" /></p>

<h2 id="pin-out">Pin out:</h2>

<table>
  <thead>
    <tr>
      <th>Latch Relays</th>
      <th>Latch Relay ESP32-S2 pin #</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Latch Relay 1 ON</td>
      <td>10</td>
    </tr>
    <tr>
      <td>Latch Relay 1 OFF</td>
      <td>9</td>
    </tr>
    <tr>
      <td>Latch Relay 2 ON</td>
      <td>20</td>
    </tr>
    <tr>
      <td>Latch Relay 2 OFF</td>
      <td>3</td>
    </tr>
    <tr>
      <td>Latch Relay 3 ON</td>
      <td>19</td>
    </tr>
    <tr>
      <td>Latch Relay 3 OFF</td>
      <td>8</td>
    </tr>
    <tr>
      <td>Latch Relay 4 ON</td>
      <td>15</td>
    </tr>
    <tr>
      <td>Latch Relay 4 OFF</td>
      <td>16</td>
    </tr>
    <tr>
      <td>Latch Relay 5 ON</td>
      <td>7</td>
    </tr>
    <tr>
      <td>Latch Relay 5 OFF</td>
      <td>6</td>
    </tr>
    <tr>
      <td>Latch Relay 6 ON</td>
      <td>5</td>
    </tr>
    <tr>
      <td>Latch Relay 6 OFF</td>
      <td>4</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Tact buttons</th>
      <th>ESP32-S2 pin #</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Button 1</td>
      <td>11</td>
    </tr>
    <tr>
      <td>Button 2</td>
      <td>12</td>
    </tr>
    <tr>
      <td>Button 3</td>
      <td>13</td>
    </tr>
    <tr>
      <td>Button 4</td>
      <td>14</td>
    </tr>
    <tr>
      <td>Button 5</td>
      <td>21</td>
    </tr>
    <tr>
      <td>Button 6</td>
      <td>33</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Optocoupled switch inputs</th>
      <th>ESP32-S2 pin #</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Switch 1</td>
      <td>34</td>
    </tr>
    <tr>
      <td>Switch 2</td>
      <td>35</td>
    </tr>
    <tr>
      <td>Switch 3</td>
      <td>36</td>
    </tr>
    <tr>
      <td>Switch 4</td>
      <td>37</td>
    </tr>
    <tr>
      <td>Switch 5</td>
      <td>38</td>
    </tr>
    <tr>
      <td>Switch 6</td>
      <td>39</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Dallas sensor ESP32-S2 pins:</th>
      <th>ESP32-S2 pin #</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Temp 1</td>
      <td>40</td>
    </tr>
    <tr>
      <td>Temp 2</td>
      <td>41</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>i2c expander ESP32-S2 (LED’s pins):</th>
      <th>ESP32-S2 pin #</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>SDA</td>
      <td>17</td>
    </tr>
    <tr>
      <td>SCL</td>
      <td>18</td>
    </tr>
  </tbody>
</table>]]></content><author><name>easySensors team</name></author><category term="ESP32_S2" /><summary type="html"><![CDATA[With ESPHome you can create automations not only with a controller but also do some complicate logic in the MCU with.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/esp32_relays_din_rail_enclosure1.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/esp32_relays_din_rail_enclosure1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>